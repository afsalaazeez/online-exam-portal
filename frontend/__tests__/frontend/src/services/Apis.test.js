// ********RoostGPT********
// Test generated by RoostGPT for test exam-portal using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
// Import statements
import apis from '../../../../frontend/src/services/Apis';

// Test suite for Apis.js
describe('APIs Configuration', () => {
  describe('Environment base URLs', () => {
    // Mocking process.env
    const originalEnv = process.env;

    beforeEach(() => {
      jest.resetModules(); // this is important to clear cached modules that might have the environment variables set differently
      process.env = { ...originalEnv }; // copy the original process.env
    });

    afterEach(() => {
      process.env = originalEnv; // restore original env after each test
    });

    test('should use local URLs when environment is not docker', () => {
      process.env.NODE_ENV = 'development';
      const expectedLocalUrl = 'http://localhost:3000';
      const expectedBackendUrl = 'http://localhost:5000';
      expect(apis.BASE_LOCAL_URL).toEqual(expectedLocalUrl);
      expect(apis.BASE).toEqual(expectedBackendUrl);
    });

    test('should use docker URLs when environment is docker', () => {
      process.env.NODE_ENV = 'docker';
      // Re-import apis after environment change
      const updatedApis = require('../../../../frontend/src/services/Apis').default;
      const expectedLocalUrl = 'http://user-frontend-app:3000';
      const expectedBackendUrl = 'http://backend:5000';
      expect(updatedApis.BASE_LOCAL_URL).toEqual(expectedLocalUrl);
      expect(updatedApis.BASE).toEqual(expectedBackendUrl);
    });
  });

  describe('API endpoints', () => {
    test('API endpoints should be correct', () => {
      expect(apis.LOGIN).toEqual('/api/v1/adminlogin/');
      expect(apis.REGISTER_USER).toEqual('/api/v1/public/register');
      expect(apis.GET_ADMIN_DETAILS).toEqual('/Disc Js/v1/admin/details');
      // Add more expects for each endpoint to check if they are correctly set
    });
  });
});

