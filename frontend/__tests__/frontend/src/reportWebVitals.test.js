// ********RoostGPT********
// Test generated by RoostGPT for test exam-portal using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
// __tests__/frontend/src/reportWebVitals.test.js
import reportWebVitals from '../../../frontend/src/reportWebVitals';
import * as webVitals from 'web-vitals';

// Mocking the web-vitals module
jest.mock('web-vitals', () => ({
  getCLS: jest.fn(),
  getFID: jest.fn(),
  getFCP: jest.fn(),
  getLCP: jest.fn(),
  getTTFB: jest.fn()
}));

describe('reportWebVitals', () => {
  test('does not call any vitals if onPerfEntry is not a function', () => {
    reportWebVitals(null);
    expect(webVitals.getCLS).not.toHaveBeenCalled();
    expect(webVitals.getFID).not.toHaveBeenCalled();
    expect(webVitals.getFCP).not.toHaveBeenCalled();
    expect(webVitals.getLCP).not.toHaveBeenCalled();
    expect(webVitals.getTTFB).not.toHaveBeenCalled();
  });

  test('calls all vital functions if onPerfEntry is a valid function', async () => {
    const mockOnPerfEntry = jest.fn();
    await reportWebVitals(mockOnPerfEntry);

    expect(webVitals.getCLS).toHaveBeenCalledWith(mockOnPerfEntry);
    expect(webVitals.getFID).toHaveBeenCalledWith(mockOnPerfEntry);
    expect(webVitals.getFCP).toHaveBeenCalledWith(mockOnPerfEntry);
    expect(webVitals.getLCP).toHaveBeenCalledWith(mockOnPerfEntry);
    expect(webVitals.getTTFB).toHaveBeenCalledWith(mockOnPerfEntry);
  });
});

